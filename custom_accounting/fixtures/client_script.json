[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2025-10-28 10:12:12.249028",
  "module": "Custom Accounting",
  "name": "Sales invoice script",
  "script": "frappe.ui.form.on('Sales Invoice', {\n    // -------------------------------\n    // ðŸ”¹ ONLOAD EVENT\n    // -------------------------------\n    onload: function(frm) {\n        // === Cost Center Filter Setup ===\n        frm.trigger('set_cost_center_query');\n\n        // === Item Table Restrictions ===\n        frm.set_df_property('items', 'cannot_add_multiple', true);\n        frm.set_df_property('items', 'allow_bulk_edit', false);\n        \n        if (frm.is_new()) {\n            setTimeout(() => {\n                show_only_add_row(frm);\n            }, 1000);\n        }\n    },\n\n    // -------------------------------\n    // ðŸ”¹ REFRESH EVENT\n    // -------------------------------\n    refresh: function(frm) {\n        frm.set_df_property('items', 'cannot_add_multiple', true);\n        frm.set_df_property('items', 'allow_bulk_edit', false);\n        \n        update_buttons(frm);\n\n        setTimeout(() => {\n            $('.grid-add-multiple-rows, .btn-add-multiple-rows').hide();\n        }, 500);\n        \n        if (!window.buttonCheck) {\n            window.buttonCheck = setInterval(() => {\n                // Continuous UI enforcement\n                frm.set_df_property('items', 'cannot_add_multiple', true);\n                frm.set_df_property('items', 'allow_bulk_edit', false);\n                $('.grid-add-multiple-rows, .btn-add-multiple-rows').hide();\n                update_buttons(frm);\n            }, 800);\n        }\n    },\n\n    before_unload: function(frm) {\n        if (window.buttonCheck) {\n            clearInterval(window.buttonCheck);\n            window.buttonCheck = null;\n        }\n    },\n\n    // -------------------------------\n    // ðŸ”¹ COST CENTER â†” LOCATION LOGIC\n    // -------------------------------\n    cost_center: function(frm) {\n        if (frm.doc.cost_center) {\n            frappe.db.get_value('Cost Center', frm.doc.cost_center, 'custom_location')\n                .then(r => {\n                    const location = r?.message?.custom_location || '';\n                    frm.set_value('location', location);\n                });\n        } else {\n            frm.set_value('location', '');\n        }\n    },\n\n    location: function(frm) {\n        frm.trigger('set_cost_center_query');\n    },\n\n    company: function(frm) {\n        frm.trigger('set_cost_center_query');\n    },\n\n    // Helper trigger for query setup\n    set_cost_center_query: function(frm) {\n        frm.set_query('cost_center', () => {\n            const filters = {\n                company: frm.doc.company || frappe.defaults.get_user_default(\"Company\")\n            };\n            if (frm.doc.location) {\n                filters['custom_location'] = frm.doc.location;\n            }\n            return { filters };\n        });\n    }\n});\n\n\n// =====================================================\n// ðŸ”¹ CHILD TABLE (Sales Invoice Item) EVENTS\n// =====================================================\nfrappe.ui.form.on('Sales Invoice Item', {\n    item_code: function(frm, cdt, cdn) {\n        const row = locals[cdt][cdn];\n        if (row.item_code) {\n            frm.set_value('custom_item', row.item_code);\n        }\n        reapply_item_table_rules(frm);\n    },\n    \n    qty: function(frm) {\n        reapply_item_table_rules(frm);\n    },\n    \n    after_item_remove: function(frm) {\n        reapply_item_table_rules(frm);\n    },\n   \n    after_item_add: function(frm) {\n        reapply_item_table_rules(frm);\n    }\n});\n\n\n// =====================================================\n// ðŸ”¹ HELPER FUNCTIONS\n// =====================================================\nfunction update_buttons(frm) {\n    if (!frm.fields_dict.items) return;\n    \n    const has_items = frm.doc.items && frm.doc.items.length > 0;\n\n    frm.set_df_property('items', 'cannot_add_multiple', true);\n    frm.set_df_property('items', 'allow_bulk_edit', false);\n    \n    if (has_items) {\n        frm.set_df_property('items', 'cannot_add_rows', true);\n        frm.set_df_property('items', 'cannot_delete_rows', false);\n    } else {\n        frm.set_df_property('items', 'cannot_add_rows', false);\n        frm.set_df_property('items', 'cannot_delete_rows', true);\n    }\n    \n    $('.grid-add-multiple-rows, .btn-add-multiple-rows').hide();\n}\n\nfunction show_only_add_row(frm) {\n    frm.set_df_property('items', 'cannot_add_rows', false);      \n    frm.set_df_property('items', 'cannot_add_multiple', true);   \n    frm.set_df_property('items', 'allow_bulk_edit', false);      \n    frm.set_df_property('items', 'cannot_delete_rows', true);    \n    frm.set_df_property('items', 'cannot_delete_all_rows', true); \n    \n    $('.grid-add-multiple-rows, .btn-add-multiple-rows').hide();\n}\n\nfunction reapply_item_table_rules(frm) {\n    setTimeout(() => {\n        frm.set_df_property('items', 'cannot_add_multiple', true);\n        $('.grid-add-multiple-rows, .btn-add-multiple-rows').hide();\n        update_buttons(frm);\n    }, 300);\n}\n",
  "view": "Form"
 }
]