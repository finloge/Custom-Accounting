[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2025-10-31 10:13:13.121125",
  "module": "Custom Accounting",
  "name": "Sales invoice script",
  "script": "frappe.ui.form.on('Sales Invoice', {\r\n    // ---------- COST CENTER & LOCATION ----------\r\n    cost_center(frm) {\r\n        const cost_center = frm.doc.cost_center;\r\n\r\n        if (cost_center) {\r\n            frappe.db.get_value('Cost Center', cost_center, 'custom_location')\r\n                .then(r => {\r\n                    const loc = r?.message?.custom_location || '';\r\n                    frm.set_value('location', loc);\r\n                    frm.set_query('location', () => ({\r\n                        filters: { name: loc }\r\n                    }));\r\n                });\r\n        } else {\r\n            frm.set_value('location', '');\r\n            frm.set_query('location', () => ({}));\r\n        }\r\n    },\r\n\r\n    location(frm) {\r\n        frm.set_query('cost_center', () => {\r\n            const filters = { is_group: 0 };\r\n            if (frm.doc.location) filters.custom_location = frm.doc.location;\r\n            return { filters };\r\n        });\r\n    },\r\n\r\n    // ---------- ITEM CHILD TABLE RESTRICTION ----------\r\n    onload(frm) {\r\n        restrict_item_table(frm);\r\n        if (frm.is_new()) {\r\n            setTimeout(() => allow_first_item(frm), 500);\r\n        }\r\n    },\r\n\r\n    refresh(frm) {\r\n        restrict_item_table(frm);\r\n        toggle_add_delete(frm);\r\n\r\n        if (!window.purchaseItemWatcher) {\r\n            window.purchaseItemWatcher = setInterval(() => {\r\n                restrict_item_table(frm);\r\n                toggle_add_delete(frm);\r\n            }, 800);\r\n        }\r\n    },\r\n\r\n    before_unload() {\r\n        if (window.purchaseItemWatcher) {\r\n            clearInterval(window.purchaseItemWatcher);\r\n            window.purchaseItemWatcher = null;\r\n        }\r\n    }\r\n});\r\n\r\n\r\n// ---------- HELPER FUNCTIONS ----------\r\nfunction restrict_item_table(frm) {\r\n    frm.set_df_property('items', 'cannot_add_multiple', true);\r\n    frm.set_df_property('items', 'allow_bulk_edit', false);\r\n    $('.grid-add-multiple-rows, .btn-add-multiple-rows').hide();\r\n}\r\n\r\nfunction toggle_add_delete(frm) {\r\n    const has_items = frm.doc.items?.length > 0;\r\n\r\n    frm.set_df_property('items', 'cannot_add_rows', has_items);\r\n    frm.set_df_property('items', 'cannot_delete_rows', !has_items);\r\n\r\n    $('.grid-add-multiple-rows, .btn-add-multiple-rows').hide();\r\n}\r\n\r\nfunction allow_first_item(frm) {\r\n    frm.set_df_property('items', 'cannot_add_rows', false);\r\n    frm.set_df_property('items', 'cannot_add_multiple', true);\r\n    frm.set_df_property('items', 'allow_bulk_edit', false);\r\n    frm.set_df_property('items', 'cannot_delete_rows', true);\r\n    frm.set_df_property('items', 'cannot_delete_all_rows', true);\r\n    $('.grid-add-multiple-rows, .btn-add-multiple-rows').hide();\r\n}\r\n\r\n\r\nfrappe.ui.form.on('Sales Invoice Item', {\r\n    qty(frm) {\r\n        restrict_item_table(frm);\r\n        toggle_add_delete(frm);\r\n    },\r\n\r\n    after_delete(frm) {\r\n        restrict_item_table(frm);\r\n        toggle_add_delete(frm);\r\n    },\r\n\r\n    after_add(frm) {\r\n        restrict_item_table(frm);\r\n        toggle_add_delete(frm);\r\n    },\r\n    \r\n    // added \r\n    item_code(frm, cdt, cdn) {\r\n        let row = locals[cdt][cdn];\r\n        if(row.item_code) {\r\n            frm.set_value('custom_item', row.item_code);\r\n        }\r\n    }\r\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2025-10-31 10:15:56.447974",
  "module": "Custom Accounting",
  "name": "Purchase Invoice Script",
  "script": "frappe.ui.form.on('Purchase Invoice', {\r\n    // ---------- COST CENTER & LOCATION ----------\r\n    cost_center(frm) {\r\n        const cost_center = frm.doc.cost_center;\r\n\r\n        if (cost_center) {\r\n            frappe.db.get_value('Cost Center', cost_center, 'custom_location')\r\n                .then(r => {\r\n                    const loc = r?.message?.custom_location || '';\r\n                    frm.set_value('location', loc);\r\n                    frm.set_query('location', () => ({\r\n                        filters: { name: loc }\r\n                    }));\r\n                });\r\n        } else {\r\n            frm.set_value('location', '');\r\n            frm.set_query('location', () => ({}));\r\n        }\r\n    },\r\n\r\n    location(frm) {\r\n        frm.set_query('cost_center', () => {\r\n            const filters = { is_group: 0 };\r\n            if (frm.doc.location) filters.custom_location = frm.doc.location;\r\n            return { filters };\r\n        });\r\n    },\r\n\r\n    // ---------- ITEM CHILD TABLE RESTRICTION ----------\r\n    onload(frm) {\r\n        restrict_item_table(frm);\r\n        if (frm.is_new()) {\r\n            setTimeout(() => allow_first_item(frm), 500);\r\n        }\r\n    },\r\n\r\n    refresh(frm) {\r\n        restrict_item_table(frm);\r\n        toggle_add_delete(frm);\r\n\r\n        if (!window.purchaseItemWatcher) {\r\n            window.purchaseItemWatcher = setInterval(() => {\r\n                restrict_item_table(frm);\r\n                toggle_add_delete(frm);\r\n            }, 800);\r\n        }\r\n    },\r\n\r\n    before_unload() {\r\n        if (window.purchaseItemWatcher) {\r\n            clearInterval(window.purchaseItemWatcher);\r\n            window.purchaseItemWatcher = null;\r\n        }\r\n    }\r\n});\r\n\r\nfrappe.ui.form.on('Purchase Invoice Item', {\r\n    qty(frm) {\r\n        restrict_item_table(frm);\r\n        toggle_add_delete(frm);\r\n    },\r\n\r\n    after_delete(frm) {\r\n        restrict_item_table(frm);\r\n        toggle_add_delete(frm);\r\n    },\r\n\r\n    after_add(frm) {\r\n        restrict_item_table(frm);\r\n        toggle_add_delete(frm);\r\n    },\r\n    \r\n    item_code(frm, cdt, cdn) {\r\n        let row = locals[cdt][cdn];\r\n        if(row.item_code) {\r\n            frm.set_value('custom_item', row.item_code);\r\n        }\r\n    }\r\n    \r\n});\r\n\r\n// ---------- HELPER FUNCTIONS ----------\r\nfunction restrict_item_table(frm) {\r\n    frm.set_df_property('items', 'cannot_add_multiple', true);\r\n    frm.set_df_property('items', 'allow_bulk_edit', false);\r\n    $('.grid-add-multiple-rows, .btn-add-multiple-rows').hide();\r\n}\r\n\r\nfunction toggle_add_delete(frm) {\r\n    const has_items = frm.doc.items?.length > 0;\r\n\r\n    frm.set_df_property('items', 'cannot_add_rows', has_items);\r\n    frm.set_df_property('items', 'cannot_delete_rows', !has_items);\r\n\r\n    $('.grid-add-multiple-rows, .btn-add-multiple-rows').hide();\r\n}\r\n\r\nfunction allow_first_item(frm) {\r\n    frm.set_df_property('items', 'cannot_add_rows', false);\r\n    frm.set_df_property('items', 'cannot_add_multiple', true);\r\n    frm.set_df_property('items', 'allow_bulk_edit', false);\r\n    frm.set_df_property('items', 'cannot_delete_rows', true);\r\n    frm.set_df_property('items', 'cannot_delete_all_rows', true);\r\n    $('.grid-add-multiple-rows, .btn-add-multiple-rows').hide();\r\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Entry",
  "enabled": 1,
  "modified": "2025-10-31 10:14:05.527653",
  "module": "Custom Accounting",
  "name": "Payment Entry Script",
  "script": "frappe.ui.form.on('Payment Entry', {\r\n    // ---------- COST CENTER & LOCATION ----------\r\n    cost_center(frm) {\r\n        const cost_center = frm.doc.cost_center;\r\n\r\n        if (cost_center) {\r\n            frappe.db.get_value('Cost Center', cost_center, 'custom_location')\r\n                .then(r => {\r\n                    const loc = r?.message?.custom_location || '';\r\n                    frm.set_value('location', loc);\r\n                    frm.set_query('location', () => ({\r\n                        filters: { name: loc }\r\n                    }));\r\n                });\r\n        } else {\r\n            frm.set_value('location', '');\r\n            frm.set_query('location', () => ({}));\r\n        }\r\n    },\r\n\r\n    location(frm) {\r\n        frm.set_query('cost_center', () => {\r\n            const filters = { is_group: 0 };\r\n            if (frm.doc.location) filters.custom_location = frm.doc.location;\r\n            return { filters };\r\n        });\r\n    },\r\n\r\n    // ---------- PAYMENT REFERENCE CHILD TABLE RESTRICTION ----------\r\n    onload(frm) {\r\n        restrict_reference_table(frm);\r\n        if (frm.is_new()) {\r\n            setTimeout(() => allow_first_reference(frm), 500);\r\n        }\r\n    },\r\n\r\n    refresh(frm) {\r\n        restrict_reference_table(frm);\r\n        toggle_add_delete_reference(frm);\r\n\r\n        if (!window.referenceWatcher) {\r\n            window.referenceWatcher = setInterval(() => {\r\n                restrict_reference_table(frm);\r\n                toggle_add_delete_reference(frm);\r\n            }, 800);\r\n        }\r\n    },\r\n\r\n    before_unload() {\r\n        if (window.referenceWatcher) {\r\n            clearInterval(window.referenceWatcher);\r\n            window.referenceWatcher = null;\r\n        }\r\n    }\r\n});\r\n\r\nfrappe.ui.form.on('Payment Entry Reference', {\r\n    reference_name(frm, cdt, cdn) {\r\n        restrict_reference_table(frm);\r\n        toggle_add_delete_reference(frm);\r\n    },\r\n\r\n    allocated_amount(frm) {\r\n        restrict_reference_table(frm);\r\n        toggle_add_delete_reference(frm);\r\n    },\r\n\r\n    after_delete(frm) {\r\n        restrict_reference_table(frm);\r\n        toggle_add_delete_reference(frm);\r\n    },\r\n\r\n    after_add(frm) {\r\n        restrict_reference_table(frm);\r\n        toggle_add_delete_reference(frm);\r\n    }\r\n});\r\n\r\n// ---------- HELPER FUNCTIONS ----------\r\nfunction restrict_reference_table(frm) {\r\n    frm.set_df_property('references', 'cannot_add_multiple', true);\r\n    frm.set_df_property('references', 'allow_bulk_edit', false);\r\n    $('.grid-add-multiple-rows, .btn-add-multiple-rows').hide();\r\n}\r\n\r\nfunction toggle_add_delete_reference(frm) {\r\n    const has_refs = frm.doc.references?.length > 0;\r\n\r\n    frm.set_df_property('references', 'cannot_add_rows', has_refs);\r\n    frm.set_df_property('references', 'cannot_delete_rows', !has_refs);\r\n\r\n    $('.grid-add-multiple-rows, .btn-add-multiple-rows').hide();\r\n}\r\n\r\nfunction allow_first_reference(frm) {\r\n    frm.set_df_property('references', 'cannot_add_rows', false);\r\n    frm.set_df_property('references', 'cannot_add_multiple', true);\r\n    frm.set_df_property('references', 'allow_bulk_edit', false);\r\n    frm.set_df_property('references', 'cannot_delete_rows', true);\r\n    frm.set_df_property('references', 'cannot_delete_all_rows', true);\r\n    $('.grid-add-multiple-rows, .btn-add-multiple-rows').hide();\r\n}\r\n",
  "view": "Form"
 }
]